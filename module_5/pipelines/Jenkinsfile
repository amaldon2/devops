pipeline {
    agent any

    environment {
        REGISTRY_PASSWORD_1 = credentials('REGISTRY_PASSWORD_1')
        group='rg-devops-sura-amaldon2-dev'
        location='southcentralus'
        registry='crdevopssuraamaldon2dev'
        registry_url='https://crdevopssuraamaldon2dev.azurecr.io'
        skuRegistry='Basic'
        plan='plan-devops-sura-amaldon2-dev'
        app='app-devops-sura-starter-amaldon2-dev'
        image='crdevopssuraamaldon2dev.azurecr.io/starter:latest'
    }

    stages {
        stage('Build') { 
            steps {
                // 
                echo 'Building'
                sh 'sudo apt-get update -y'
                sh 'curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash'
                nodejs(nodeJSInstallationName: 'Node 12.22.3') {
                    sh 'rm -rf fe-devops-sura-amaldon2-dev'
                    sh 'npx gatsby new fe-devops-sura-amaldon2-dev https://github.com/Evaluates2/Gatsby-Starter-TypeScript-Redux-TDD-BDD'
                    sh 'npm run build --prefix fe-devops-sura-amaldon2-dev'
                }
            }
        }
        stage('Test') { 
            steps {
                // 
                echo 'Testing'
                nodejs(nodeJSInstallationName: 'Node 12.22.3') {
                    sh 'npm run test-once --prefix fe-devops-sura-amaldon2-dev'
                    sh 'npm run lint --prefix fe-devops-sura-amaldon2-dev'
                }
            }
        }
        stage('Delivery') { 
            steps {
                // 
                echo 'Deliverying'
                withCredentials([azureServicePrincipal('efe62200-ef27-4f8a-a77a-e85b9d7e1d88')]) {
                    sh 'az login --service-principal -u $AZURE_CLIENT_ID -p $AZURE_CLIENT_SECRET -t $AZURE_TENANT_ID'
                    sh '''
cat <<-EOF> fe-devops-sura-amaldon2-dev/Dockerfile
FROM nginx:stable-alpine
COPY public /usr/share/nginx/html
EXPOSE 80
CMD ["nginx", "-g", "daemon off;"]
EOF'''
                    sh 'docker build -f fe-devops-sura-amaldon2-dev/Dockerfile -t $image fe-devops-sura-amaldon2-dev'
                    sh 'docker login $registry_url -u crdevopssuraamaldon2dev -p $REGISTRY_PASSWORD_1'
                    sh 'docker push $image'
                }
            }
        }
        stage('Deploy') { 
            steps {
                // 
                echo 'Deploying'
                sh 'az configure --defaults group=$group location=$location'
                sh 'az webapp create --plan $plan --name $app --deployment-container-image-name $image'
                sh 'az webapp config container set --name $app --docker-custom-image-name $image --docker-registry-server-url $registry_url'    
            }
        }
    }
}
